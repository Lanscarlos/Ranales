# 自定义的 id
# 请不要其他监听模块的 id 重复
example-listener:
  # 是否启用 [ 默认为 true ]
  enable: false
  # 别名 id
  # 请不要与其他监听模块的 id 重复
  aliases: [ 'entity-damage-event' ]
  # 事件类的完整包名路径
  # Bukkit中的事件详情见 https://bukkit.windit.net/javadoc/org/bukkit/event/package-summary.html
  class: 'org.bukkit.event.entity.PlayerJoinEvent'
  # 定义事件监听优先级 [ 默认为 NORMAL ]
  # 优先级越低，越先被处理
  # 详情见 https://bukkit.windit.net/javadoc/org/bukkit/event/EventPriority.html
  # MONITOR -> 没有修改的事件的优先级应该比这个低
  # LOWEST -> 优先级最低
  # LOW -> 优先级低
  # NORMAL -> 默认优先级
  # HIGH -> 优先级高
  # HIGHEST -> 优先级最高
  priority: 'NORMAL'
  # 是否忽略已被取消的事件 [ 默认为 true ]
  ignore-cancelled: true
  # 预处理
  # 在执行所有脚本前对事件进行预处理
  # 若在预处理中 将事件取消，则不会执行后续的脚本
  preprocessing:
    # 脚本执行顺序
    # 默认顺序 js -> kether -> script
    run-priority:
      - js
      - kether
      - script
    kether: |-
      print *preprocessing...
    js: |-
      args.put("example.arg", event.getPlayer())
    # 运行脚本文件
    # 脚本文件位于 ./plugins/Vulpecular/script 文件夹内
    script:
      - 'example.ks'
  # 定义参数
  # 插件会根据事件类型自动将事件内的部分属性赋值到参数中
  # 使得在使用脚本过程中能够更方便的访问到这些事件属性
  # 若不想使用插件提供的参数
  # 你可以自定义参数或者替换已有参数甚至删除已有参数
  # 自定义参数通过 javascript 来获取，编辑前请确保你拥有相关知识基础
  args:
    # 禁用所有已有参数
    # 使用 * 作为统配符
    # 但保留原始的一些 event 相关参数
    '*': false
    # 禁用与 player.* 内的所有已有参数
    # 使用 * 作为统配符置于末尾
    'player.*': false
    # 禁用包括 player、player.* 在内的所有已有参数
    # 使用 * 作为统配符置于末尾
    'player*': false
    # 禁用原有参数 player.health
    'player.health': false
    # 自定义参数
    # 若参数名与已有参数相同，则会替换原有参数
    # 以下是得到玩家指南针的指向的位置(Location).
    # 详情见 https://bukkit.windit.net/javadoc/org/bukkit/entity/Player.html#getCompassTarget()
    'player.compassTarget': player.getCompassTarget()